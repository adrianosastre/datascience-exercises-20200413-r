spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv$mode[1] <-  100;
for(i in 2:length(spotify_songs_tv$mode)){
spotify_songs_tv$mode[i] <-  (1 + spotify_songs$mode[i]/100) * spotify_songs_tv$mode[i-1]
}
spotify_songs_tv$speechiness[1] <-  100;
for(i in 2:length(spotify_songs_tv$speechiness)){
spotify_songs_tv$speechiness[i] <-  (1 + spotify_songs$speechiness[i]/100) * spotify_songs_tv$speechiness[i-1]
}
spotify_songs_tv$acousticness[1] <-  100;
for(i in 2:length(spotify_songs_tv$acousticness)){
spotify_songs_tv$acousticness[i] <-  (1 + spotify_songs$acousticness[i]/100) * spotify_songs_tv$acousticness[i-1]
}
spotify_songs_tv$instrumentalness[1] <-  100;
for(i in 2:length(spotify_songs_tv$instrumentalness)){
spotify_songs_tv$instrumentalness[i] <-  (1 + spotify_songs$instrumentalness[i]/100) * spotify_songs_tv$instrumentalness[i-1]
}
spotify_songs_tv$liveness[1] <-  100;
for(i in 2:length(spotify_songs_tv$liveness)){
spotify_songs_tv$liveness[i] <-  (1 + spotify_songs$liveness[i]/100) * spotify_songs_tv$liveness[i-1]
}
spotify_songs_tv$valence[1] <-  100;
for(i in 2:length(spotify_songs_tv$valence)){
spotify_songs_tv$valence[i] <-  (1 + spotify_songs$valence[i]/100) * spotify_songs_tv$valence[i-1]
}
spotify_songs_tv$tempo[1] <-  100;
for(i in 2:length(spotify_songs_tv$tempo)){
spotify_songs_tv$tempo[i] <-  (1 + spotify_songs$tempo[i]/100) * spotify_songs_tv$tempo[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_album_year")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_album_year,
track_popularity,
danceability,
energy,
mode,
speechiness,
acousticness,
instrumentalness,
liveness,
valence
)
#View(spotify_songs_tv)
spotify_songs_tv$track_popularity[1] <-  100;
for(i in 2:length(spotify_songs_tv$track_popularity)){
spotify_songs_tv$track_popularity[i] <-  (1 + spotify_songs$track_popularity[i]/100) * spotify_songs_tv$track_popularity[i-1]
}
spotify_songs_tv$danceability[1] <-  100;
for(i in 2:length(spotify_songs_tv$danceability)){
spotify_songs_tv$danceability[i] <-  (1 + spotify_songs$danceability[i]/100) * spotify_songs_tv$danceability[i-1]
}
spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv$mode[1] <-  100;
for(i in 2:length(spotify_songs_tv$mode)){
spotify_songs_tv$mode[i] <-  (1 + spotify_songs$mode[i]/100) * spotify_songs_tv$mode[i-1]
}
spotify_songs_tv$speechiness[1] <-  100;
for(i in 2:length(spotify_songs_tv$speechiness)){
spotify_songs_tv$speechiness[i] <-  (1 + spotify_songs$speechiness[i]/100) * spotify_songs_tv$speechiness[i-1]
}
spotify_songs_tv$acousticness[1] <-  100;
for(i in 2:length(spotify_songs_tv$acousticness)){
spotify_songs_tv$acousticness[i] <-  (1 + spotify_songs$acousticness[i]/100) * spotify_songs_tv$acousticness[i-1]
}
spotify_songs_tv$instrumentalness[1] <-  100;
for(i in 2:length(spotify_songs_tv$instrumentalness)){
spotify_songs_tv$instrumentalness[i] <-  (1 + spotify_songs$instrumentalness[i]/100) * spotify_songs_tv$instrumentalness[i-1]
}
spotify_songs_tv$liveness[1] <-  100;
for(i in 2:length(spotify_songs_tv$liveness)){
spotify_songs_tv$liveness[i] <-  (1 + spotify_songs$liveness[i]/100) * spotify_songs_tv$liveness[i-1]
}
spotify_songs_tv$valence[1] <-  100;
for(i in 2:length(spotify_songs_tv$valence)){
spotify_songs_tv$valence[i] <-  (1 + spotify_songs$valence[i]/100) * spotify_songs_tv$valence[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_album_year")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
View(spotify_songs)
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_album_year,
track_popularity,
danceability,
energy,
speechiness,
acousticness,
instrumentalness,
liveness,
valence
)
#View(spotify_songs_tv)
spotify_songs_tv$track_popularity[1] <-  100;
for(i in 2:length(spotify_songs_tv$track_popularity)){
spotify_songs_tv$track_popularity[i] <-  (1 + spotify_songs$track_popularity[i]/100) * spotify_songs_tv$track_popularity[i-1]
}
spotify_songs_tv$danceability[1] <-  100;
for(i in 2:length(spotify_songs_tv$danceability)){
spotify_songs_tv$danceability[i] <-  (1 + spotify_songs$danceability[i]/100) * spotify_songs_tv$danceability[i-1]
}
spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv$speechiness[1] <-  100;
for(i in 2:length(spotify_songs_tv$speechiness)){
spotify_songs_tv$speechiness[i] <-  (1 + spotify_songs$speechiness[i]/100) * spotify_songs_tv$speechiness[i-1]
}
spotify_songs_tv$acousticness[1] <-  100;
for(i in 2:length(spotify_songs_tv$acousticness)){
spotify_songs_tv$acousticness[i] <-  (1 + spotify_songs$acousticness[i]/100) * spotify_songs_tv$acousticness[i-1]
}
spotify_songs_tv$instrumentalness[1] <-  100;
for(i in 2:length(spotify_songs_tv$instrumentalness)){
spotify_songs_tv$instrumentalness[i] <-  (1 + spotify_songs$instrumentalness[i]/100) * spotify_songs_tv$instrumentalness[i-1]
}
spotify_songs_tv$liveness[1] <-  100;
for(i in 2:length(spotify_songs_tv$liveness)){
spotify_songs_tv$liveness[i] <-  (1 + spotify_songs$liveness[i]/100) * spotify_songs_tv$liveness[i-1]
}
spotify_songs_tv$valence[1] <-  100;
for(i in 2:length(spotify_songs_tv$valence)){
spotify_songs_tv$valence[i] <-  (1 + spotify_songs$valence[i]/100) * spotify_songs_tv$valence[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_album_year")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_id,
track_popularity,
danceability,
energy,
speechiness,
acousticness,
instrumentalness,
liveness,
valence
)
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_id,
track_popularity,
danceability,
energy,
speechiness,
acousticness,
instrumentalness,
liveness,
valence
)
#View(spotify_songs_tv)
spotify_songs_tv$track_popularity[1] <-  100;
for(i in 2:length(spotify_songs_tv$track_popularity)){
spotify_songs_tv$track_popularity[i] <-  (1 + spotify_songs$track_popularity[i]/100) * spotify_songs_tv$track_popularity[i-1]
}
spotify_songs_tv$danceability[1] <-  100;
for(i in 2:length(spotify_songs_tv$danceability)){
spotify_songs_tv$danceability[i] <-  (1 + spotify_songs$danceability[i]/100) * spotify_songs_tv$danceability[i-1]
}
spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv$speechiness[1] <-  100;
for(i in 2:length(spotify_songs_tv$speechiness)){
spotify_songs_tv$speechiness[i] <-  (1 + spotify_songs$speechiness[i]/100) * spotify_songs_tv$speechiness[i-1]
}
spotify_songs_tv$acousticness[1] <-  100;
for(i in 2:length(spotify_songs_tv$acousticness)){
spotify_songs_tv$acousticness[i] <-  (1 + spotify_songs$acousticness[i]/100) * spotify_songs_tv$acousticness[i-1]
}
spotify_songs_tv$instrumentalness[1] <-  100;
for(i in 2:length(spotify_songs_tv$instrumentalness)){
spotify_songs_tv$instrumentalness[i] <-  (1 + spotify_songs$instrumentalness[i]/100) * spotify_songs_tv$instrumentalness[i-1]
}
spotify_songs_tv$liveness[1] <-  100;
for(i in 2:length(spotify_songs_tv$liveness)){
spotify_songs_tv$liveness[i] <-  (1 + spotify_songs$liveness[i]/100) * spotify_songs_tv$liveness[i-1]
}
spotify_songs_tv$valence[1] <-  100;
for(i in 2:length(spotify_songs_tv$valence)){
spotify_songs_tv$valence[i] <-  (1 + spotify_songs$valence[i]/100) * spotify_songs_tv$valence[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_id")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
head(spotify_songs)
tail(spotify_songs)
str(spotify_songs)
glimpse(spotify_songs)
summary(spotify_songs)
# Alterando release date para Date:
spotify_songs$track_album_release_date = lubridate::ymd(spotify_songs$track_album_release_date)
class(spotify_songs$track_album_release_date)
# Adicionando campo ano:
years = substring(c(spotify_songs$track_album_release_date),0,4)
spotify_songs <- mutate(spotify_songs, track_album_year = years)
# Removendo NA:
spotify_songs <- na.omit(spotify_songs)
# Removendo valores 0:
spotify_songs <- filter(
spotify_songs,
track_popularity != 0,
danceability != 0,
energy != 0,
mode != 0,
speechiness != 0,
acousticness != 0,
instrumentalness != 0,
liveness != 0,
valence != 0,
tempo != 0
)
View(spotify_songs)
spotify_songs_by_genre <- spotify_songs %>%
group_by(playlist_genre, track_album_release_date) %>%
summarise(track_popularity = sum(track_popularity, na.rm = TRUE),
danceability = mean(danceability, na.rm = TRUE),
energy = mean(energy, na.rm = TRUE)) %>%
ungroup()
View(spotify_songs_by_genre)
## Nesting (agrupando) por gênero:
spotify_songs_by_genre_nested <- spotify_songs_by_genre %>%
group_by(playlist_genre) %>%
nest()
View(spotify_songs_by_genre_nested)
spotify_songs_by_year <- spotify_songs %>%
group_by(playlist_genre, track_album_year) %>%
summarise(track_popularity = sum(track_popularity, na.rm = TRUE),
danceability = mean(danceability, na.rm = TRUE),
energy = mean(energy, na.rm = TRUE)) %>%
ungroup()
View(spotify_songs_by_year)
## Nesting (agrupando) por gênero:
spotify_songs_by_year_nested <- spotify_songs_by_year %>%
group_by(track_album_year) %>%
nest()
View(spotify_songs_by_year)
chart_1 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = playlist_genre, y = track_popularity)) +
geom_line()
plotly::ggplotly(chart_1)
chart_1 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = track_popularity)) +
geom_line()
plotly::ggplotly(chart_1)
chart_2 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = playlist_genre)) +
geom_bar()
plotly::ggplotly(chart_2)
chart_2 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = danceability)) +
geom_col()
plotly::ggplotly(chart_2)
chart_2 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = energy)) +
geom_col()
plotly::ggplotly(chart_2)
chart_3 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = energy, y = track_popularity)) +
geom_line()
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_3)
chart_3 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = danceability, y = track_popularity)) +
geom_line()
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_3)
chart_1 <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = danceability)) +
geom_point() +
theme(legend.position = "bottom")
plotly::ggplotly(chart_1)
chart_x <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = energy)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_x)
chart_x <- spotify_songs_by_year %>%
ggplot(aes(x = track_album_year, y = track_popularity)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_x)
chart_x <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = track_popularity)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_x)
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_id,
track_popularity,
danceability,
energy,
speechiness,
acousticness,
instrumentalness,
liveness,
valence
)
#View(spotify_songs_tv)
spotify_songs_tv$track_popularity[1] <-  100;
for(i in 2:length(spotify_songs_tv$track_popularity)){
spotify_songs_tv$track_popularity[i] <-  (1 + spotify_songs$track_popularity[i]/100) * spotify_songs_tv$track_popularity[i-1]
}
spotify_songs_tv$danceability[1] <-  100;
for(i in 2:length(spotify_songs_tv$danceability)){
spotify_songs_tv$danceability[i] <-  (1 + spotify_songs$danceability[i]/100) * spotify_songs_tv$danceability[i-1]
}
spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv$speechiness[1] <-  100;
for(i in 2:length(spotify_songs_tv$speechiness)){
spotify_songs_tv$speechiness[i] <-  (1 + spotify_songs$speechiness[i]/100) * spotify_songs_tv$speechiness[i-1]
}
spotify_songs_tv$acousticness[1] <-  100;
for(i in 2:length(spotify_songs_tv$acousticness)){
spotify_songs_tv$acousticness[i] <-  (1 + spotify_songs$acousticness[i]/100) * spotify_songs_tv$acousticness[i-1]
}
spotify_songs_tv$instrumentalness[1] <-  100;
for(i in 2:length(spotify_songs_tv$instrumentalness)){
spotify_songs_tv$instrumentalness[i] <-  (1 + spotify_songs$instrumentalness[i]/100) * spotify_songs_tv$instrumentalness[i-1]
}
spotify_songs_tv$liveness[1] <-  100;
for(i in 2:length(spotify_songs_tv$liveness)){
spotify_songs_tv$liveness[i] <-  (1 + spotify_songs$liveness[i]/100) * spotify_songs_tv$liveness[i-1]
}
spotify_songs_tv$valence[1] <-  100;
for(i in 2:length(spotify_songs_tv$valence)){
spotify_songs_tv$valence[i] <-  (1 + spotify_songs$valence[i]/100) * spotify_songs_tv$valence[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_id")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
head(spotify_songs)
glimpse(spotify_songs)
glimpse(spotify_songs)
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
glimpse(spotify_songs)
# Alterando release date para Date:
spotify_songs$track_album_release_date = lubridate::ymd(spotify_songs$track_album_release_date)
class(spotify_songs$track_album_release_date)
# Adicionando campo ano:
years = substring(c(spotify_songs$track_album_release_date),0,4)
spotify_songs <- mutate(spotify_songs, track_album_year = years)
# Removendo NA:
spotify_songs <- na.omit(spotify_songs)
# Removendo valores 0:
spotify_songs <- filter(
spotify_songs,
track_popularity != 0,
danceability != 0,
energy != 0,
speechiness != 0,
acousticness != 0,
instrumentalness != 0,
liveness != 0,
valence != 0,
tempo != 0
)
glimpse(spotify_songs)
spotify_songs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-21/spotify_songs.csv')
glimpse(spotify_songs)
# Alterando release date para Date:
spotify_songs$track_album_release_date = lubridate::ymd(spotify_songs$track_album_release_date)
class(spotify_songs$track_album_release_date)
# Adicionando campo ano:
years = substring(c(spotify_songs$track_album_release_date),0,4)
spotify_songs <- mutate(spotify_songs, track_album_year = years)
# Removendo NA:
spotify_songs <- na.omit(spotify_songs)
# Removendo valores 0:
spotify_songs <- filter(
spotify_songs,
track_popularity != 0,
danceability != 0,
energy != 0
)
glimpse(spotify_songs)
spotify_songs_by_genre <- spotify_songs %>%
group_by(playlist_genre, track_album_release_date) %>%
summarise(track_popularity = sum(track_popularity, na.rm = TRUE),
danceability = mean(danceability, na.rm = TRUE),
energy = mean(energy, na.rm = TRUE)) %>%
ungroup()
glimpse(spotify_songs_by_genre)
## Nesting (agrupando) por gênero:
spotify_songs_by_genre_nested <- spotify_songs_by_genre %>%
group_by(playlist_genre) %>%
nest()
glimpse(spotify_songs_by_genre_nested)
spotify_songs_by_year <- spotify_songs %>%
group_by(playlist_genre, track_album_year) %>%
summarise(track_popularity = sum(track_popularity, na.rm = TRUE),
danceability = mean(danceability, na.rm = TRUE),
energy = mean(energy, na.rm = TRUE)) %>%
ungroup()
glimpse(spotify_songs_by_year)
## Nesting (agrupando) por gênero:
spotify_songs_by_year_nested <- spotify_songs_by_year %>%
group_by(track_album_year) %>%
nest()
glimpse(spotify_songs_by_year)
chart_1 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = playlist_genre, y = track_popularity)) +
geom_line()
plotly::ggplotly(chart_1)
chart_2 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = track_popularity)) +
geom_line()
plotly::ggplotly(chart_2)
chart_3 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = playlist_genre)) +
geom_bar()
plotly::ggplotly(chart_3)
chart_4 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = danceability)) +
geom_col()
plotly::ggplotly(chart_4)
chart_5 <- spotify_songs_by_year %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = track_album_year, y = energy)) +
geom_col()
plotly::ggplotly(chart_5)
chart_6 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = energy, y = track_popularity)) +
geom_line()
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_6)
chart_7 <- spotify_songs_by_genre %>%
#filter(playlist_genre == "rock") %>%
ggplot(aes(x = danceability, y = track_popularity)) +
geom_line()
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_7)
chart_8 <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = danceability)) +
geom_point() +
theme(legend.position = "bottom")
plotly::ggplotly(chart_8)
chart_9 <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = energy)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_9)
chart_10 <- spotify_songs_by_year %>%
ggplot(aes(x = track_album_year, y = track_popularity)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_10)
chart_11 <- spotify_songs_by_year %>%
ggplot(aes(x = playlist_genre, y = track_popularity)) +
geom_point() +
theme(legend.position = "bottom")
#chart_spotify_songs_by_genre
plotly::ggplotly(chart_11)
# Selecionando algumas colunas para taxa de variação (número índice):
spotify_songs_tv <- spotify_songs %>% select(
track_id,
track_popularity,
danceability,
energy
)
#View(spotify_songs_tv)
spotify_songs_tv$track_popularity[1] <-  100;
for(i in 2:length(spotify_songs_tv$track_popularity)){
spotify_songs_tv$track_popularity[i] <-  (1 + spotify_songs$track_popularity[i]/100) * spotify_songs_tv$track_popularity[i-1]
}
spotify_songs_tv$danceability[1] <-  100;
for(i in 2:length(spotify_songs_tv$danceability)){
spotify_songs_tv$danceability[i] <-  (1 + spotify_songs$danceability[i]/100) * spotify_songs_tv$danceability[i-1]
}
spotify_songs_tv$energy[1] <-  100;
for(i in 2:length(spotify_songs_tv$energy)){
spotify_songs_tv$energy[i] <-  (1 + spotify_songs$energy[i]/100) * spotify_songs_tv$energy[i-1]
}
spotify_songs_tv_cor <- cor(spotify_songs_tv %>% select(-"track_id")) %>% round(2)
print(spotify_songs_tv_cor)
corrplot::corrplot(spotify_songs_tv_cor, type = "upper", tl.col = "black")
